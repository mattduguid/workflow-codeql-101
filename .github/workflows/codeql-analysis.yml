name: CodeQL Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 1' # Runs every Monday at midnight UTC

permissions:
  contents: read
  security-events: write

jobs:
  analyze:
    name: Analyze Code with CodeQL
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ✅ Ensure all files are checked out

      - name: Debug - List Files
        run: |
          echo "Listing all files in repo..."
          ls -R
          echo "Checking Go files..."
          find . -name "*.go"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'  # ✅ Ensure latest Go version

      - name: Verify Go Environment
        run: |
          go version
          go env

      - name: Install Go Dependencies
        run: |
          cd golang-example
          go mod tidy  # ✅ Ensure dependencies are installed
          go mod verify  # ✅ Validate module files
          ls -l go.sum  # ✅ Confirm that go.sum exists

      - name: Build the Go Project (Critical Step)
        run: |
          cd golang-example
          mkdir -p build  # ✅ Ensure a build directory exists
          go build -o build/main .  # ✅ Compile the Go code
          ls -R build  # ✅ Verify compiled files exist

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: go
          source-root: ./golang-example  # ✅ Ensure correct folder path
          build-mode: manual  # ✅ Prevent auto-build issues

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/github/workflow"  # ✅ Runs all default security queries

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif  # ✅ Ensure results are uploaded
